//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace NovaMessageSwitch.WmsServiceModel.WMS {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WCSTaskServiceModel", Namespace="http://schemas.datacontract.org/2004/07/Nova.WMS.WebSite.Services.ServiceModel")]
    [System.SerializableAttribute()]
    public partial class WCSTaskServiceModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaskIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TaskLevelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaskTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaskId {
            get {
                return this.TaskIdField;
            }
            set {
                if ((object.ReferenceEquals(this.TaskIdField, value) != true)) {
                    this.TaskIdField = value;
                    this.RaisePropertyChanged("TaskId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TaskLevel {
            get {
                return this.TaskLevelField;
            }
            set {
                if ((this.TaskLevelField.Equals(value) != true)) {
                    this.TaskLevelField = value;
                    this.RaisePropertyChanged("TaskLevel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaskType {
            get {
                return this.TaskTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TaskTypeField, value) != true)) {
                    this.TaskTypeField = value;
                    this.RaisePropertyChanged("TaskType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WCSStockInApplyServiceModel", Namespace="http://schemas.datacontract.org/2004/07/Nova.WMS.WebSite.Services.ServiceModel")]
    [System.SerializableAttribute()]
    public partial class WCSStockInApplyServiceModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClientIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeviceIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TrayCodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClientId {
            get {
                return this.ClientIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ClientIdField, value) != true)) {
                    this.ClientIdField = value;
                    this.RaisePropertyChanged("ClientId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeviceId {
            get {
                return this.DeviceIdField;
            }
            set {
                if ((object.ReferenceEquals(this.DeviceIdField, value) != true)) {
                    this.DeviceIdField = value;
                    this.RaisePropertyChanged("DeviceId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TrayCode {
            get {
                return this.TrayCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.TrayCodeField, value) != true)) {
                    this.TrayCodeField = value;
                    this.RaisePropertyChanged("TrayCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WCSTaskDetailServiceModel", Namespace="http://schemas.datacontract.org/2004/07/Nova.WMS.WebSite.Services.ServiceModel")]
    [System.SerializableAttribute()]
    public partial class WCSTaskDetailServiceModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> EndColField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EndDeviceIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> EndLaneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> EndLayerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> EndRowField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> StartColField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StartDeviceIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> StartLaneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> StartLayerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> StartRowField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> EndCol {
            get {
                return this.EndColField;
            }
            set {
                if ((this.EndColField.Equals(value) != true)) {
                    this.EndColField = value;
                    this.RaisePropertyChanged("EndCol");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EndDeviceId {
            get {
                return this.EndDeviceIdField;
            }
            set {
                if ((object.ReferenceEquals(this.EndDeviceIdField, value) != true)) {
                    this.EndDeviceIdField = value;
                    this.RaisePropertyChanged("EndDeviceId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> EndLane {
            get {
                return this.EndLaneField;
            }
            set {
                if ((this.EndLaneField.Equals(value) != true)) {
                    this.EndLaneField = value;
                    this.RaisePropertyChanged("EndLane");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> EndLayer {
            get {
                return this.EndLayerField;
            }
            set {
                if ((this.EndLayerField.Equals(value) != true)) {
                    this.EndLayerField = value;
                    this.RaisePropertyChanged("EndLayer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> EndRow {
            get {
                return this.EndRowField;
            }
            set {
                if ((this.EndRowField.Equals(value) != true)) {
                    this.EndRowField = value;
                    this.RaisePropertyChanged("EndRow");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> StartCol {
            get {
                return this.StartColField;
            }
            set {
                if ((this.StartColField.Equals(value) != true)) {
                    this.StartColField = value;
                    this.RaisePropertyChanged("StartCol");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StartDeviceId {
            get {
                return this.StartDeviceIdField;
            }
            set {
                if ((object.ReferenceEquals(this.StartDeviceIdField, value) != true)) {
                    this.StartDeviceIdField = value;
                    this.RaisePropertyChanged("StartDeviceId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> StartLane {
            get {
                return this.StartLaneField;
            }
            set {
                if ((this.StartLaneField.Equals(value) != true)) {
                    this.StartLaneField = value;
                    this.RaisePropertyChanged("StartLane");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> StartLayer {
            get {
                return this.StartLayerField;
            }
            set {
                if ((this.StartLayerField.Equals(value) != true)) {
                    this.StartLayerField = value;
                    this.RaisePropertyChanged("StartLayer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> StartRow {
            get {
                return this.StartRowField;
            }
            set {
                if ((this.StartRowField.Equals(value) != true)) {
                    this.StartRowField = value;
                    this.RaisePropertyChanged("StartRow");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WCSLaneServiceModel", Namespace="http://schemas.datacontract.org/2004/07/Nova.WMS.WebSite.Services.ServiceModel")]
    [System.SerializableAttribute()]
    public partial class WCSLaneServiceModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Lane_TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MaxColsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MaxLayersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MaxRowsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NO_LaneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NO_Lane_PLCField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Lane_Type {
            get {
                return this.Lane_TypeField;
            }
            set {
                if ((this.Lane_TypeField.Equals(value) != true)) {
                    this.Lane_TypeField = value;
                    this.RaisePropertyChanged("Lane_Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MaxCols {
            get {
                return this.MaxColsField;
            }
            set {
                if ((this.MaxColsField.Equals(value) != true)) {
                    this.MaxColsField = value;
                    this.RaisePropertyChanged("MaxCols");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MaxLayers {
            get {
                return this.MaxLayersField;
            }
            set {
                if ((this.MaxLayersField.Equals(value) != true)) {
                    this.MaxLayersField = value;
                    this.RaisePropertyChanged("MaxLayers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MaxRows {
            get {
                return this.MaxRowsField;
            }
            set {
                if ((this.MaxRowsField.Equals(value) != true)) {
                    this.MaxRowsField = value;
                    this.RaisePropertyChanged("MaxRows");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NO_Lane {
            get {
                return this.NO_LaneField;
            }
            set {
                if ((this.NO_LaneField.Equals(value) != true)) {
                    this.NO_LaneField = value;
                    this.RaisePropertyChanged("NO_Lane");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NO_Lane_PLC {
            get {
                return this.NO_Lane_PLCField;
            }
            set {
                if ((this.NO_Lane_PLCField.Equals(value) != true)) {
                    this.NO_Lane_PLCField = value;
                    this.RaisePropertyChanged("NO_Lane_PLC");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderID {
            get {
                return this.OrderIDField;
            }
            set {
                if ((this.OrderIDField.Equals(value) != true)) {
                    this.OrderIDField = value;
                    this.RaisePropertyChanged("OrderID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WCSPoistionServiceModel", Namespace="http://schemas.datacontract.org/2004/07/Nova.WMS.WebSite.Services.ServiceModel")]
    [System.SerializableAttribute()]
    public partial class WCSPoistionServiceModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ColumnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LaneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LayerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Position_StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RowField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime Update_TimeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Column {
            get {
                return this.ColumnField;
            }
            set {
                if ((this.ColumnField.Equals(value) != true)) {
                    this.ColumnField = value;
                    this.RaisePropertyChanged("Column");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Lane {
            get {
                return this.LaneField;
            }
            set {
                if ((this.LaneField.Equals(value) != true)) {
                    this.LaneField = value;
                    this.RaisePropertyChanged("Lane");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Layer {
            get {
                return this.LayerField;
            }
            set {
                if ((this.LayerField.Equals(value) != true)) {
                    this.LayerField = value;
                    this.RaisePropertyChanged("Layer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Position_State {
            get {
                return this.Position_StateField;
            }
            set {
                if ((this.Position_StateField.Equals(value) != true)) {
                    this.Position_StateField = value;
                    this.RaisePropertyChanged("Position_State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Row {
            get {
                return this.RowField;
            }
            set {
                if ((this.RowField.Equals(value) != true)) {
                    this.RowField = value;
                    this.RaisePropertyChanged("Row");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Update_Time {
            get {
                return this.Update_TimeField;
            }
            set {
                if ((this.Update_TimeField.Equals(value) != true)) {
                    this.Update_TimeField = value;
                    this.RaisePropertyChanged("Update_Time");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WCSDeviceValueServiceModel", Namespace="http://schemas.datacontract.org/2004/07/Nova.WMS.WebSite.Services.ServiceModel")]
    [System.SerializableAttribute()]
    public partial class WCSDeviceValueServiceModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeviceField_NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeviceField_ValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Device_IdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeviceField_Name {
            get {
                return this.DeviceField_NameField;
            }
            set {
                if ((object.ReferenceEquals(this.DeviceField_NameField, value) != true)) {
                    this.DeviceField_NameField = value;
                    this.RaisePropertyChanged("DeviceField_Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeviceField_Value {
            get {
                return this.DeviceField_ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.DeviceField_ValueField, value) != true)) {
                    this.DeviceField_ValueField = value;
                    this.RaisePropertyChanged("DeviceField_Value");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Device_Id {
            get {
                return this.Device_IdField;
            }
            set {
                if ((object.ReferenceEquals(this.Device_IdField, value) != true)) {
                    this.Device_IdField = value;
                    this.RaisePropertyChanged("Device_Id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WCSPLCServiceModel", Namespace="http://schemas.datacontract.org/2004/07/Nova.WMS.WebSite.Services.ServiceModel")]
    [System.SerializableAttribute()]
    public partial class WCSPLCServiceModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PLC_CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PLC_IsOnlineField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PLC_Code {
            get {
                return this.PLC_CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PLC_CodeField, value) != true)) {
                    this.PLC_CodeField = value;
                    this.RaisePropertyChanged("PLC_Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PLC_IsOnline {
            get {
                return this.PLC_IsOnlineField;
            }
            set {
                if ((this.PLC_IsOnlineField.Equals(value) != true)) {
                    this.PLC_IsOnlineField = value;
                    this.RaisePropertyChanged("PLC_IsOnline");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WMS.IServiceForWCS")]
    public interface IServiceForWCS {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceForWCS/GetTaskList", ReplyAction="http://tempuri.org/IServiceForWCS/GetTaskListResponse")]
        NovaMessageSwitch.WmsServiceModel.WMS.WCSTaskServiceModel[] GetTaskList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceForWCS/GetTaskList", ReplyAction="http://tempuri.org/IServiceForWCS/GetTaskListResponse")]
        System.Threading.Tasks.Task<NovaMessageSwitch.WmsServiceModel.WMS.WCSTaskServiceModel[]> GetTaskListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceForWCS/SendStockInApply", ReplyAction="http://tempuri.org/IServiceForWCS/SendStockInApplyResponse")]
        bool SendStockInApply(NovaMessageSwitch.WmsServiceModel.WMS.WCSStockInApplyServiceModel stockInApply);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceForWCS/SendStockInApply", ReplyAction="http://tempuri.org/IServiceForWCS/SendStockInApplyResponse")]
        System.Threading.Tasks.Task<bool> SendStockInApplyAsync(NovaMessageSwitch.WmsServiceModel.WMS.WCSStockInApplyServiceModel stockInApply);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceForWCS/MarkTaskAsSend", ReplyAction="http://tempuri.org/IServiceForWCS/MarkTaskAsSendResponse")]
        bool MarkTaskAsSend(string taskId, string commandNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceForWCS/MarkTaskAsSend", ReplyAction="http://tempuri.org/IServiceForWCS/MarkTaskAsSendResponse")]
        System.Threading.Tasks.Task<bool> MarkTaskAsSendAsync(string taskId, string commandNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceForWCS/MarkTaskAsDone", ReplyAction="http://tempuri.org/IServiceForWCS/MarkTaskAsDoneResponse")]
        bool MarkTaskAsDone(string taskId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceForWCS/MarkTaskAsDone", ReplyAction="http://tempuri.org/IServiceForWCS/MarkTaskAsDoneResponse")]
        System.Threading.Tasks.Task<bool> MarkTaskAsDoneAsync(string taskId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceForWCS/GetTaskDetail", ReplyAction="http://tempuri.org/IServiceForWCS/GetTaskDetailResponse")]
        NovaMessageSwitch.WmsServiceModel.WMS.WCSTaskDetailServiceModel GetTaskDetail(string taskId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceForWCS/GetTaskDetail", ReplyAction="http://tempuri.org/IServiceForWCS/GetTaskDetailResponse")]
        System.Threading.Tasks.Task<NovaMessageSwitch.WmsServiceModel.WMS.WCSTaskDetailServiceModel> GetTaskDetailAsync(string taskId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceForWCS/GetLaneList", ReplyAction="http://tempuri.org/IServiceForWCS/GetLaneListResponse")]
        NovaMessageSwitch.WmsServiceModel.WMS.WCSLaneServiceModel[] GetLaneList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceForWCS/GetLaneList", ReplyAction="http://tempuri.org/IServiceForWCS/GetLaneListResponse")]
        System.Threading.Tasks.Task<NovaMessageSwitch.WmsServiceModel.WMS.WCSLaneServiceModel[]> GetLaneListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceForWCS/GetPositionList", ReplyAction="http://tempuri.org/IServiceForWCS/GetPositionListResponse")]
        NovaMessageSwitch.WmsServiceModel.WMS.WCSPoistionServiceModel[] GetPositionList(System.Nullable<System.DateTime> sinceTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceForWCS/GetPositionList", ReplyAction="http://tempuri.org/IServiceForWCS/GetPositionListResponse")]
        System.Threading.Tasks.Task<NovaMessageSwitch.WmsServiceModel.WMS.WCSPoistionServiceModel[]> GetPositionListAsync(System.Nullable<System.DateTime> sinceTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceForWCS/GetAllDeviceList", ReplyAction="http://tempuri.org/IServiceForWCS/GetAllDeviceListResponse")]
        NovaMessageSwitch.WmsServiceModel.WMS.WCSDeviceValueServiceModel[] GetAllDeviceList(string deviceType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceForWCS/GetAllDeviceList", ReplyAction="http://tempuri.org/IServiceForWCS/GetAllDeviceListResponse")]
        System.Threading.Tasks.Task<NovaMessageSwitch.WmsServiceModel.WMS.WCSDeviceValueServiceModel[]> GetAllDeviceListAsync(string deviceType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceForWCS/KeepAlive", ReplyAction="http://tempuri.org/IServiceForWCS/KeepAliveResponse")]
        void KeepAlive();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceForWCS/KeepAlive", ReplyAction="http://tempuri.org/IServiceForWCS/KeepAliveResponse")]
        System.Threading.Tasks.Task KeepAliveAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceForWCS/UpdatePLC", ReplyAction="http://tempuri.org/IServiceForWCS/UpdatePLCResponse")]
        void UpdatePLC(NovaMessageSwitch.WmsServiceModel.WMS.WCSPLCServiceModel[] plcList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceForWCS/UpdatePLC", ReplyAction="http://tempuri.org/IServiceForWCS/UpdatePLCResponse")]
        System.Threading.Tasks.Task UpdatePLCAsync(NovaMessageSwitch.WmsServiceModel.WMS.WCSPLCServiceModel[] plcList);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceForWCSChannel : NovaMessageSwitch.WmsServiceModel.WMS.IServiceForWCS, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceForWCSClient : System.ServiceModel.ClientBase<NovaMessageSwitch.WmsServiceModel.WMS.IServiceForWCS>, NovaMessageSwitch.WmsServiceModel.WMS.IServiceForWCS {
        
        public ServiceForWCSClient() {
        }
        
        public ServiceForWCSClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceForWCSClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceForWCSClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceForWCSClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public NovaMessageSwitch.WmsServiceModel.WMS.WCSTaskServiceModel[] GetTaskList() {
            return base.Channel.GetTaskList();
        }
        
        public System.Threading.Tasks.Task<NovaMessageSwitch.WmsServiceModel.WMS.WCSTaskServiceModel[]> GetTaskListAsync() {
            return base.Channel.GetTaskListAsync();
        }
        
        public bool SendStockInApply(NovaMessageSwitch.WmsServiceModel.WMS.WCSStockInApplyServiceModel stockInApply) {
            return base.Channel.SendStockInApply(stockInApply);
        }
        
        public System.Threading.Tasks.Task<bool> SendStockInApplyAsync(NovaMessageSwitch.WmsServiceModel.WMS.WCSStockInApplyServiceModel stockInApply) {
            return base.Channel.SendStockInApplyAsync(stockInApply);
        }
        
        public bool MarkTaskAsSend(string taskId, string commandNumber) {
            return base.Channel.MarkTaskAsSend(taskId, commandNumber);
        }
        
        public System.Threading.Tasks.Task<bool> MarkTaskAsSendAsync(string taskId, string commandNumber) {
            return base.Channel.MarkTaskAsSendAsync(taskId, commandNumber);
        }
        
        public bool MarkTaskAsDone(string taskId) {
            return base.Channel.MarkTaskAsDone(taskId);
        }
        
        public System.Threading.Tasks.Task<bool> MarkTaskAsDoneAsync(string taskId) {
            return base.Channel.MarkTaskAsDoneAsync(taskId);
        }
        
        public NovaMessageSwitch.WmsServiceModel.WMS.WCSTaskDetailServiceModel GetTaskDetail(string taskId) {
            return base.Channel.GetTaskDetail(taskId);
        }
        
        public System.Threading.Tasks.Task<NovaMessageSwitch.WmsServiceModel.WMS.WCSTaskDetailServiceModel> GetTaskDetailAsync(string taskId) {
            return base.Channel.GetTaskDetailAsync(taskId);
        }
        
        public NovaMessageSwitch.WmsServiceModel.WMS.WCSLaneServiceModel[] GetLaneList() {
            return base.Channel.GetLaneList();
        }
        
        public System.Threading.Tasks.Task<NovaMessageSwitch.WmsServiceModel.WMS.WCSLaneServiceModel[]> GetLaneListAsync() {
            return base.Channel.GetLaneListAsync();
        }
        
        public NovaMessageSwitch.WmsServiceModel.WMS.WCSPoistionServiceModel[] GetPositionList(System.Nullable<System.DateTime> sinceTime) {
            return base.Channel.GetPositionList(sinceTime);
        }
        
        public System.Threading.Tasks.Task<NovaMessageSwitch.WmsServiceModel.WMS.WCSPoistionServiceModel[]> GetPositionListAsync(System.Nullable<System.DateTime> sinceTime) {
            return base.Channel.GetPositionListAsync(sinceTime);
        }
        
        public NovaMessageSwitch.WmsServiceModel.WMS.WCSDeviceValueServiceModel[] GetAllDeviceList(string deviceType) {
            return base.Channel.GetAllDeviceList(deviceType);
        }
        
        public System.Threading.Tasks.Task<NovaMessageSwitch.WmsServiceModel.WMS.WCSDeviceValueServiceModel[]> GetAllDeviceListAsync(string deviceType) {
            return base.Channel.GetAllDeviceListAsync(deviceType);
        }
        
        public void KeepAlive() {
            base.Channel.KeepAlive();
        }
        
        public System.Threading.Tasks.Task KeepAliveAsync() {
            return base.Channel.KeepAliveAsync();
        }
        
        public void UpdatePLC(NovaMessageSwitch.WmsServiceModel.WMS.WCSPLCServiceModel[] plcList) {
            base.Channel.UpdatePLC(plcList);
        }
        
        public System.Threading.Tasks.Task UpdatePLCAsync(NovaMessageSwitch.WmsServiceModel.WMS.WCSPLCServiceModel[] plcList) {
            return base.Channel.UpdatePLCAsync(plcList);
        }
    }
}
